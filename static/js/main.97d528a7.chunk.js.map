{"version":3,"sources":["Track/Track.js","Playlist/Playlist.js","Home/Home.js","App.js","index.js"],"names":["Track","className","alt","this","props","track","name","artists","src","albumArt","url","href","link","map","artist","index","key","Component","Playlist","state","code","playlist","playlistURI","ruri","userID","at","playlistCreated","playlistCreatedLink","endpoints","authorize","token","users","links","authLink","tracksSelectOptions","numberOfTracks","getLibrary","bind","getToken","getUserID","generateAuthLink","addTracksToPlaylist","createPlaylist","createConfetti","getCode","handleSelect","getOptions","sessionStorage","getItem","URLSearchParams","window","location","search","get","setState","setItem","scopes","encodeURIComponent","mid","ac","refreshToken","grantType","codeType","encodedBody","btoa","ms","fetch","method","headers","body","then","r","ok","json","removeItem","console","error","data","access_token","refresh_token","toString","compileList","tracks","items","forEach","object","item","external_urls","spotify","album","images","tempPlaylist","tempPlaylistURI","push","uri","month","Date","toDateString","split","snapshotID","id","playlistID","JSON","stringify","status","message","snapshot_id","deg","radius","radians","Math","PI","sin","cos","i","colors","round","length","container","document","getElementById","innerHTML","elem","createElement","random","x","getCircleY","y","getCircleX","coord","style","webkitTransform","width","height","classList","add","backgroundColor","getColor","webkitTranslate","appendChild","visibility","e","target","value","onChange","selected","onClick","Home","submitted","retrieve","handleSubmit","handleUserInput","preventDefault","event","onSubmit","type","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.97d528a7.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Track.scss';\n\nclass Track extends Component {\n    render() {\n        return (\n            <span className=\"Track\">\n                <span className=\"track-image-small\">\n                    <img alt={'Album cover of ' + this.props.track.name + ' by ' + this.props.track.artists[0].name}\n                         src={this.props.track.albumArt[1].url}/>\n                </span>\n                <span className=\"track-details\">\n                    <h2 className=\"track-title\">\n                        <a href={this.props.track.link}>{this.props.track.name}</a>\n                    </h2>\n                    <p className=\"track-artist\">\n                        {\n                            this.props.track.artists.map((artist, index) => {\n                                return (<a href={artist.link} key={index}>\n                                    { index > 0 ? (', ') : ('') } {artist.name}\n                                </a>);\n                            })\n                        }\n                    </p>\n                </span>\n            </span>\n        );\n    }\n}\n\nexport default Track;\n","import React, {Component} from 'react';\nimport Track from '../Track/Track';\nimport './Playlist.scss';\n\n// TODO Generate a playlist for user, and add custom playlist cover\n// TODO Create a more dynamic title for playlist, i.e. using month name\nclass Playlist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n            playlist: [],\n            playlistURI: [],\n            ruri: 'https://iguannalin.github.io/spotify-recently-added/',\n            userID: '',\n            at: '',\n            playlistCreated: false,\n            playlistCreatedLink: '',\n            endpoints: {\n                authorize: 'https://accounts.spotify.com/authorize',\n                token: 'https://accounts.spotify.com/api/token',\n                users: 'https://api.spotify.com/v1/'\n            },\n            links: {\n                authLink: ''\n            },\n            tracksSelectOptions: [],\n            numberOfTracks: 0\n        };\n        this.getLibrary = this.getLibrary.bind(this);\n        this.getToken = this.getToken.bind(this);\n        this.getUserID = this.getUserID.bind(this);\n        this.generateAuthLink = this.generateAuthLink.bind(this);\n        this.addTracksToPlaylist = this.addTracksToPlaylist.bind(this);\n        this.createPlaylist = this.createPlaylist.bind(this);\n        this.createConfetti = this.createConfetti.bind(this);\n        this.getCode = this.getCode.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n    };\n\n    componentDidMount() {\n        this.getOptions();\n        this.generateAuthLink();\n        this.getToken(this.getCode());\n        if (sessionStorage.getItem('numTracks')) {\n            this.state.numberOfTracks = sessionStorage.getItem('numTracks');\n        }\n    }\n\n    getCode() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const code = urlParams.get('code');\n        this.setState({\n            code: code\n        });\n        sessionStorage.setItem('mcode', code);\n        return code;\n    }\n\n    generateAuthLink() {\n        const scopes = encodeURIComponent('user-library-read playlist-modify-private');\n        this.setState({\n            links: {\n                authLink: (this.state.endpoints.authorize + '?client_id=' + this.props.mid + '&response_type=code&redirect_uri=' + this.state.ruri + '&scope=' + scopes)\n            }\n        });\n    }\n\n    getToken(ac) {\n        const refreshToken = sessionStorage.getItem('mtoken');\n        let grantType = 'authorization_code';\n        let codeType = 'code';\n        if (refreshToken && refreshToken !== \"undefined\") {\n            this.setState({at: refreshToken});\n            ac = refreshToken;\n            grantType = 'refresh_token';\n            codeType = 'refresh_token';\n        }\n\n        const encodedBody = window.btoa(this.props.mid + ':' + this.props.ms);\n        fetch(this.state.endpoints.token, {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': `Basic ${encodedBody}`\n            },\n            body: `grant_type=${grantType}&${codeType}=${ac}&redirect_uri=${this.state.ruri}`,\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else {\n                    sessionStorage.removeItem('mcode');\n                    console.error('Error: getToken');\n                }\n            })\n            .then(data => {\n                if (data && data.access_token) {\n                    this.setState({\n                        at: data.access_token\n                    });\n                    if (data.refresh_token) sessionStorage.setItem('mtoken', data.refresh_token);\n                    this.getLibrary();\n                }\n            });\n\n    }\n\n    getLibrary() {\n        fetch('https://api.spotify.com/v1/me/tracks?limit=' + this.state.numberOfTracks.toString(), {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${this.state.at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) return r.json(); else {\n                    console.error('Error: getLibrary');\n                    sessionStorage.removeItem('mtoken');\n                }\n            })\n            .then(data => {\n                if (data) this.compileList(data);\n            })\n            .then(() => {\n                this.getUserID();\n            });\n    }\n\n    compileList(tracks) {\n        this.setState(() => {\n            return {playlist: []}\n        });\n        if (tracks && tracks.items) {\n            tracks.items.forEach(object => {\n                    const item = object.track;\n                    const track = {\n                        name: item.name,\n                        link: item.external_urls.spotify,\n                        artists: item.artists.map(artist => {\n                            return {name: artist.name, link: artist.external_urls.spotify}\n                        }),\n                        albumArt: item.album.images\n                    };\n                    const tempPlaylist = this.state.playlist;\n                    const tempPlaylistURI = this.state.playlistURI;\n                    tempPlaylist.push(track);\n                    tempPlaylistURI.push(item.uri);\n                    this.setState({\n                        playlist: tempPlaylist,\n                        playlistURI: tempPlaylistURI\n                    })\n                }\n            );\n        }\n    }\n\n    createPlaylist() {\n        const d = new Date();\n        const month = d.toDateString().split(' ')[1];\n        const snapshotID = sessionStorage.getItem('playlistSnapshot');\n        if (snapshotID) {\n            this.addTracksToPlaylist(snapshotID);\n        } else {\n            fetch(this.state.endpoints.users + 'users/' + this.state.userID + '/playlists', {\n                method: 'POST',\n                'Access-Control-Allow-Headers': {\n                    'mode': 'no-cors',\n                    'access-control-allow-origin': '*'\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.state.at}`\n                },\n                body: `{\"name\":\"` + month + ` - Recently Added\",\"public\":false,\"description\":\"Created with love by Anna at https://iguannalin.github.io/spotify-recently-added/\"}`\n            })\n                .then(r => {\n                    if (r.ok) return r.json();\n                    else console.error('Error: createPlaylist');\n                })\n                .then(data => {\n                    if (data) {\n                        this.addTracksToPlaylist(data.id);\n                        this.setState({\n                            playlistCreatedLink: data.href\n                        });\n                    }\n                });\n        }\n    }\n\n    addTracksToPlaylist(playlistID) {\n        fetch(this.state.endpoints.users + 'playlists/' + playlistID + '/tracks', {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.at}`\n            },\n            body: `{\"uris\":${JSON.stringify(this.state.playlistURI)}}`\n        })\n            .then(r => r.json())\n            .then(data => {\n                if (data.error && data.error.status >= 400 && data.error.message === 'Invalid playlist Id') {\n                    sessionStorage.removeItem('playlistSnapshot');\n                    this.createPlaylist();\n                } else if (data) {\n                    sessionStorage.setItem('playlistSnapshot', data.snapshot_id);\n                    this.setState({playlistCreated: true})\n                }\n            });\n    }\n\n    getUserID() {\n        fetch((this.state.endpoints.users + 'me'), {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${this.state.at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else console.error('Error: getUserID');\n            })\n            .then(data => {\n                    if (data) {\n                        this.setState({userID: data.id});\n                    }\n                }\n            );\n    }\n\n    getCircleX(deg, radius) {\n        const radians = deg * (Math.PI / 180);\n        return Math.sin(radians) * radius;\n    }\n\n    getCircleY(deg, radius) {\n        const radians = deg * (Math.PI / 180);\n        return Math.cos(radians) * radius;\n    }\n\n    getColor(i) {\n        const colors = ['rgb(108, 220, 254)', 'rgb(55, 223, 159)', 'rgb(104, 74, 179)', 'rgb(245, 163, 199)', 'rgb(242, 107, 60)', 'rgb(241, 80, 98)', 'rgb(254, 253, 223)', 'rgb(105, 192, 123)',\n            'rgb(183, 124, 168)'];\n        const color = Math.round(i) % (colors.length);\n        return (colors[color]);\n    }\n\n    createConfetti() {\n        const container = document.getElementById('confetti-container');\n        container.innerHTML = '';\n        for (let i = 1; i <= 360; i += 30) {\n            const elem = document.createElement('span');\n            const r = (Math.random() * 7) + 5;\n            const radius = 100;\n            const x = Math.round(this.getCircleY(i, radius)).toString() + 'px';\n            const y = Math.round(this.getCircleX(i, radius)).toString() + 'px';\n            const coord = 'translate(' + x.toString() + ',' + y.toString() + ')';\n            elem.style.webkitTransform = coord;\n            elem.style.width = r.toString() + 'px';\n            elem.style.height = r.toString() + 'px';\n            elem.classList.add('confetti');\n            elem.style.backgroundColor = this.getColor(i / 30);\n            elem.style.webkitTranslate = 'transform 5s linear ease-in-out';\n            container.appendChild(elem);\n        }\n        container.style.visibility = 'visible';\n    }\n\n    getOptions() {\n        this.state.tracksSelectOptions = [];\n        for (let i = 2; i <= 50; i++) {\n            this.state.tracksSelectOptions.push(i);\n        }\n    }\n\n    handleSelect(e) {\n        this.state.numberOfTracks = e.target.value;\n        sessionStorage.setItem('numTracks', e.target.value);\n\n        if (this.state.at) this.getLibrary();\n    }\n\n    render() {\n        return (\n            <div className={this.state.playlist.length > 0 ? 'Playlist home' : 'Playlist center-display'}>\n                {this.state.playlist.length > 0 ? (\n                    <h1 className=\"header playlist-h1\">Here is a list of your\n                        <span className=\"option-select\">\n                            <select name=\"Select up to which recent tracks you would like to view\"\n                                    onChange={this.handleSelect}>\n                                {this.state.tracksSelectOptions.map((i) => {\n                                    return (<option value={i} selected={i.toString() === this.state.numberOfTracks}>{i}</option>);\n                                })}\n                            </select>\n                        </span>\n                        most recently added tracks:</h1>) : (\n                    <h1 className=\"header\">See your Spotify\n                        <span className=\"option-select\">\n                            <select name=\"Select up to which recent tracks you would like to view\"\n                                    onChange={this.handleSelect}>\n                                {this.state.tracksSelectOptions.map((i) => {\n                                    return (<option value={i} selected={i === 20}>{i}</option>);\n                                })}\n                            </select>\n                        </span>Recently Added tracks, and make it into a playlist</h1>)}\n                {this.state.playlist.length > 0 ? (\n                    <span>\n                        <ul className=\"playlist-container\">\n                                {this.state.playlist.map(\n                                    (track, index) => {\n                                        return (\n                                            <li key={index}><Track track={track}/></li>\n                                        )\n                                    }\n                                )}\n                        </ul>\n                        <div className=\"button-div position-mid-right\">\n                            {this.state.playlistCreated ? (\n                                    <p className=\"button-link\" onClick={this.createConfetti}>Done!<span\n                                        id=\"confetti-container\"/></p>) :\n                                (<button className=\"button-link\" onClick={this.createPlaylist}>Create this playlist on\n                                    Spotify for me\n                                </button>)\n                            }\n                        </div>\n                    </span>) : (\n                    <span>\n                        <div className=\"button-div margin-top\"><a href={this.state.links.authLink}>Click on me to authorize\n                            Spotify</a>\n                        </div>\n                    </span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","import React, {Component} from 'react';\nimport Playlist from '../Playlist/Playlist';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mid: '6dc15fdee3cc4723b9f2a422b7f35305',\n            ms: 'a577356d88d340828944780fc72e6749',\n            code: '',\n            submitted: false\n        };\n\n        this.retrieve = this.retrieve.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUserInput = this.handleUserInput.bind(this);\n    }\n\n    componentDidMount() {\n        this.retrieve();\n    }\n\n    retrieve() {\n        // TODO: implement a reset sessionStorage, in case user wants to change ID\n        if (!this.state.mid && sessionStorage.getItem('mid')) {\n            this.setState({\n                mid: sessionStorage.getItem('mid'),\n                ms: sessionStorage.getItem('ms')\n            });\n        }\n    }\n\n    handleSubmit(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({\n            submitted: true\n        });\n    }\n\n    handleUserInput(event) {\n        if (event.target.name === 'mid') {\n            this.setState({\n                mid: event.target.value\n            });\n            sessionStorage.setItem('mid', event.target.value);\n        } else if (event.target.name === 'ms') {\n            this.setState({\n                ms: event.target.value\n            });\n            sessionStorage.setItem('ms', event.target.value);\n        }\n    }\n\n    render() {\n        if ((this.state.mid && this.state.ms) || (this.state.submitted || this.state.code)) {\n            return (\n                <div className=\"Home\">\n                    <Playlist mid={this.state.mid} ms={this.state.ms} code={this.state.code}/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"login-form\">\n                    <div className=\"login-form card\">\n                        <h2>To use this app, enter your client ID & secret here:</h2>\n                        <form onSubmit={this.handleSubmit}>\n                            <div>\n                                <label>Client ID:\n                                    <input type=\"text\" name=\"mid\" onChange={this.handleUserInput}/></label>\n                            </div>\n                            <div>\n                                <label>Secret:\n                                    <input type=\"text\" name=\"ms\" onChange={this.handleUserInput}/></label>\n                            </div>\n                            <div className=\"login-form buttons\">\n                                <input type=\"submit\" value=\"Submit\"/>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Home from './Home/Home';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}