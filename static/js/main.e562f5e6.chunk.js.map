{"version":3,"sources":["Track/Track.js","Playlist/Playlist.js","Home/Home.js","App.js","index.js"],"names":["Track","className","href","this","props","track","link","name","artists","map","artist","index","key","Component","Playlist","state","playlist","ruri","endpoints","authorize","mid","getToken","code","ac","encodedBody","window","btoa","ms","fetch","method","headers","body","then","r","ok","json","console","error","sessionStorage","removeItem","data","access_token","getLibrary","at","compileList","tracks","setState","items","forEach","object","item","external_urls","spotify","tempPlaylist","push","authLink","generateAuthLink","length","Home","submitted","getCode","bind","retrieve","handleSubmit","handleUserInput","URLSearchParams","location","search","get","setItem","getItem","e","preventDefault","event","target","value","onSubmit","type","onChange","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e562f5e6.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Track extends Component {\n    render() {\n        return (\n            <div className=\"Track\">\n                <div className=\"track-title\">\n                    <a href={this.props.track.link}>{this.props.track.name}</a>\n                </div>\n                <div className=\"track-artist\">\n                    {\n                        this.props.track.artists.map((artist, index) => {\n                            return (<a href={artist.link} key={index}>{artist.name}</a>);\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Track;\n","import React, {Component} from 'react';\nimport Track from '../Track/Track';\nimport './Playlist.scss';\n\n// TODO Generate a playlist for user, and add custom playlist cover\nclass Playlist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playlist: [],\n            ruri: 'https://iguannalin.github.io/spotify-recently-added/',\n            endpoints: {\n                authorize: 'https://accounts.spotify.com/authorize'\n            }\n        }\n    };\n\n    generateAuthLink() {\n        return this.state.endpoints.authorize + '?client_id=' + this.props.mid + '&response_type=code&redirect_uri=' + this.state.ruri + '&scope=user-library-read';\n    }\n\n    componentDidMount() {\n        this.getToken(this.props.code);\n    }\n\n    getToken(ac) {\n        const encodedBody = window.btoa(this.props.mid + ':' + this.props.ms);\n\n        fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': `Basic ${encodedBody}`\n            },\n            body: `grant_type=authorization_code&code=${ac}&redirect_uri=${this.state.ruri}`,\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else {\n                    console.error('Code invalid');\n                    sessionStorage.removeItem('mcode');\n                }\n            })\n            .then(data => {\n                if (data && data.access_token) this.getLibrary(data.access_token)\n            });\n    }\n\n    getLibrary(at) {\n        fetch('https://api.spotify.com/v1/me/tracks?limit=20', {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) {\n                    return r.json();\n                } else {\n                    console.error('Error: getLibrary');\n                }\n            })\n            .then(data => {\n                if (data) this.compileList(data);\n            });\n    }\n\n    compileList(tracks) {\n        this.setState(() => {\n            return {playlist: []}\n        });\n\n        if (tracks && tracks.items) {\n            tracks.items.forEach(object => {\n                    const item = object.track;\n                    const track = {\n                        name: item.name,\n                        link: item.external_urls.spotify,\n                        artists: item.artists.map(artist => {\n                            return {name: artist.name, link: artist.external_urls.spotify}\n                        })\n                    };\n                    const tempPlaylist = this.state.playlist;\n                    tempPlaylist.push(track);\n                    this.setState(() => {\n                        return {\n                            playlist: tempPlaylist\n                        }\n                    })\n                }\n            );\n        }\n    }\n\n    render() {\n        const authLink = this.generateAuthLink();\n        return (\n            <div className=\"Playlist\">\n                {this.state.playlist.length > 0 ? (<span/>) : (\n                    <div className=\"button-link\"><a href={authLink}>Click on me to authorize Spotify</a>\n                    </div>)}\n                <ul>\n                    {this.state.playlist.map(\n                        (track, index) => {\n                            return (\n                                <li key={index}><Track track={track}/></li>\n                            )\n                        }\n                    )\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","import React, {Component} from 'react';\nimport Playlist from '../Playlist/Playlist';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mid: '',\n            ms: '',\n            code: '',\n            submitted: false\n        };\n\n        this.getCode = this.getCode.bind(this);\n        this.retrieve = this.retrieve.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUserInput = this.handleUserInput.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCode();\n        this.retrieve();\n    }\n\n\n    getCode() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const code = urlParams.get('code');\n        this.setState({\n            code: code,\n            submitted: !!(code)\n        });\n        sessionStorage.setItem('mcode', code);\n    }\n\n    retrieve() {\n        // TODO: implement a reset sessionStorage, in case user wants to change ID\n        if (!this.state.mid && sessionStorage.getItem('mid')) {\n            this.setState({\n                mid: sessionStorage.getItem('mid'),\n                ms: sessionStorage.getItem('ms')\n            });\n        }\n    }\n\n    handleSubmit(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({\n            submitted: true\n        });\n    }\n\n    handleUserInput(event) {\n        if (event.target.name === 'mid') {\n            this.setState({\n                mid: event.target.value\n            });\n            sessionStorage.setItem('mid', event.target.value);\n        } else if (event.target.name === 'ms') {\n            this.setState({\n                ms: event.target.value\n            });\n            sessionStorage.setItem('ms', event.target.value);\n        }\n    }\n\n    render() {\n        if ((this.state.mid && this.state.ms) || (this.state.submitted || this.state.code)) {\n            return (\n                <div className=\"Home\">\n                    <Playlist mid={this.state.mid} ms={this.state.ms} code={this.state.code}/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"login-form\">\n                    <div className=\"login-form card\">\n                        <h2>To use this app, enter your client ID & secret here:</h2>\n                        <form onSubmit={this.handleSubmit}>\n                            <div>\n                                <label>Client ID:\n                                    <input type=\"text\" name=\"mid\" onChange={this.handleUserInput}/></label>\n                            </div>\n                            <div>\n                                <label>Secret:\n                                    <input type=\"text\" name=\"ms\" onChange={this.handleUserInput}/></label>\n                            </div>\n                            <div className=\"login-form buttons\">\n                                <input type=\"submit\" value=\"Submit\"/>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Home from './Home/Home';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home></Home>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}