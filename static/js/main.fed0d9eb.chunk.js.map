{"version":3,"sources":["Track/Track.js","Playlist/Playlist.js","Home/Home.js","App.js","index.js"],"names":["Track","className","alt","this","props","track","name","artists","src","albumArt","url","href","link","map","artist","index","key","Component","Playlist","state","code","playlist","playlistURI","ruri","userID","at","playlistCreated","playlistCreatedLink","endpoints","authorize","token","users","links","authLink","tracksSelectOptions","numberOfTracks","getLibrary","bind","getToken","getUserID","generateAuthLink","addTracksToPlaylist","createPlaylist","createConfetti","getCode","mid","ms","URLSearchParams","window","location","search","get","setState","sessionStorage","setItem","scopes","encodeURIComponent","ac","refreshToken","getItem","grantType","codeType","encodedBody","btoa","fetch","method","headers","body","then","r","ok","json","removeItem","console","error","data","access_token","refresh_token","toString","compileList","tracks","items","forEach","object","item","external_urls","spotify","album","images","tempPlaylist","tempPlaylistURI","push","uri","month","Date","toDateString","split","snapshotID","id","playlistID","JSON","stringify","status","message","snapshot_id","deg","radius","radians","Math","PI","sin","cos","i","colors","round","length","container","document","getElementById","innerHTML","elem","createElement","random","x","getCircleY","y","getCircleX","coord","style","webkitTransform","width","height","classList","add","backgroundColor","getColor","webkitTranslate","appendChild","visibility","onMouseEnter","target","rel","onClick","Home","retrieve","Promise","all","response","m","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.fed0d9eb.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Track.scss';\n\nclass Track extends Component {\n    render() {\n        return (\n            <span className=\"Track\">\n                <span className=\"track-vinyl-center\">.</span>\n                <span className=\"track-image-small\">\n                    <img alt={'Album cover of ' + this.props.track.name + ' by ' + this.props.track.artists[0].name}\n                         src={this.props.track.albumArt[1].url}/>\n                </span>\n                <span className=\"track-details\">\n                    <h2 className=\"track-title\">\n                        <a href={this.props.track.link}>{this.props.track.name}</a>\n                    </h2>\n                    <p className=\"track-artist\">\n                        {\n                            this.props.track.artists.map((artist, index) => {\n                                return (<a href={artist.link} key={index}>\n                                    { index > 0 ? (', ') : ('') } {artist.name}\n                                </a>);\n                            })\n                        }\n                    </p>\n                </span>\n            </span>\n        );\n    }\n}\n\nexport default Track;\n","import React, {Component} from 'react';\nimport Track from '../Track/Track';\nimport './Playlist.scss';\n\n// TODO Generate a playlist for user, and add custom playlist cover\nclass Playlist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n            playlist: [],\n            playlistURI: [],\n            ruri: 'https://iguannalin.github.io/spotify-recently-added/',\n            userID: '',\n            at: '',\n            playlistCreated: false,\n            playlistCreatedLink: '',\n            endpoints: {\n                authorize: 'https://accounts.spotify.com/authorize',\n                token: 'https://accounts.spotify.com/api/token',\n                users: 'https://api.spotify.com/v1/'\n            },\n            links: {\n                authLink: ''\n            },\n            tracksSelectOptions: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50],\n            numberOfTracks: 20\n        };\n        this.getLibrary = this.getLibrary.bind(this);\n        this.getToken = this.getToken.bind(this);\n        this.getUserID = this.getUserID.bind(this);\n        this.generateAuthLink = this.generateAuthLink.bind(this);\n        this.addTracksToPlaylist = this.addTracksToPlaylist.bind(this);\n        this.createPlaylist = this.createPlaylist.bind(this);\n        this.createConfetti = this.createConfetti.bind(this);\n        this.getCode = this.getCode.bind(this);\n    };\n\n    componentDidMount() {\n        if (this.props.mid && this.props.ms) this.generateAuthLink();\n        this.getToken(this.getCode());\n    }\n\n    getCode() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const code = urlParams.get('code');\n        this.setState({\n            code: code\n        });\n        sessionStorage.setItem('mcode', code);\n        return code;\n    }\n\n    generateAuthLink() {\n        const scopes = encodeURIComponent('user-library-read playlist-modify-private');\n        this.setState({\n            links: {\n                authLink: (this.state.endpoints.authorize + '?client_id=' + this.props.mid + '&response_type=code&redirect_uri=' + this.state.ruri + '&scope=' + scopes)\n            }\n        });\n    }\n\n    getToken(ac) {\n        const refreshToken = sessionStorage.getItem('mtoken');\n        let grantType = 'authorization_code';\n        let codeType = 'code';\n        if (refreshToken && refreshToken !== \"undefined\") {\n            this.setState({at: refreshToken});\n            ac = refreshToken;\n            grantType = 'refresh_token';\n            codeType = 'refresh_token';\n        }\n\n        const encodedBody = window.btoa(this.props.mid + ':' + this.props.ms);\n        fetch(this.state.endpoints.token, {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': `Basic ${encodedBody}`\n            },\n            body: `grant_type=${grantType}&${codeType}=${ac}&redirect_uri=${this.state.ruri}`,\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else {\n                    sessionStorage.removeItem('mcode');\n                    console.error('Error: getToken');\n                }\n            })\n            .then(data => {\n                if (data && data.access_token) {\n                    this.setState({\n                        at: data.access_token\n                    });\n                    if (data.refresh_token) sessionStorage.setItem('mtoken', data.refresh_token);\n                    this.getLibrary();\n                }\n            });\n    }\n\n    getLibrary() {\n        fetch('https://api.spotify.com/v1/me/tracks?limit=' + this.state.numberOfTracks.toString(), {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${this.state.at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) return r.json(); else {\n                    console.error('Error: getLibrary');\n                    sessionStorage.removeItem('mtoken');\n                }\n            })\n            .then(data => {\n                if (data) this.compileList(data);\n            })\n            .then(() => {\n                this.getUserID();\n            });\n    }\n\n    compileList(tracks) {\n        this.setState(() => {\n            return {playlist: []}\n        });\n        if (tracks && tracks.items) {\n            tracks.items.forEach(object => {\n                    const item = object.track;\n                    const track = {\n                        name: item.name,\n                        link: item.external_urls.spotify,\n                        artists: item.artists.map(artist => {\n                            return {name: artist.name, link: artist.external_urls.spotify}\n                        }),\n                        albumArt: item.album.images\n                    };\n                    const tempPlaylist = this.state.playlist;\n                    const tempPlaylistURI = this.state.playlistURI;\n                    tempPlaylist.push(track);\n                    tempPlaylistURI.push(item.uri);\n                    this.setState({\n                        playlist: tempPlaylist,\n                        playlistURI: tempPlaylistURI\n                    })\n                }\n            );\n        }\n    }\n\n    createPlaylist() {\n        const d = new Date();\n        const month = d.toDateString().split(' ')[1];\n        const snapshotID = sessionStorage.getItem('playlistSnapshot');\n        if (snapshotID) {\n            this.addTracksToPlaylist(snapshotID);\n        } else {\n            fetch(this.state.endpoints.users + 'users/' + this.state.userID + '/playlists', {\n                method: 'POST',\n                'Access-Control-Allow-Headers': {\n                    'mode': 'no-cors',\n                    'access-control-allow-origin': '*'\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.state.at}`\n                },\n                body: `{\"name\":\"` + month + ` - Recently Added\",\"public\":false,\"description\":\"Created with love by Anna at https://iguannalin.github.io/spotify-recently-added/\"}`\n            })\n                .then(r => {\n                    if (r.ok) return r.json();\n                    else console.error('Error: createPlaylist');\n                })\n                .then(data => {\n                    if (data) {\n                        this.addTracksToPlaylist(data.id);\n                        this.setState({\n                            playlistCreatedLink: data.external_urls['spotify']\n                        });\n                    }\n                });\n        }\n    }\n\n    addTracksToPlaylist(playlistID) {\n        fetch(this.state.endpoints.users + 'playlists/' + playlistID + '/tracks', {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.at}`\n            },\n            body: `{\"uris\":${JSON.stringify(this.state.playlistURI)}}`\n        })\n            .then(r => r.json())\n            .then(data => {\n                if (data.error && data.error.status >= 400 && data.error.message === 'Invalid playlist Id') {\n                    sessionStorage.removeItem('playlistSnapshot');\n                    this.createPlaylist();\n                } else if (data) {\n                    sessionStorage.setItem('playlistSnapshot', data.snapshot_id);\n                    this.setState({playlistCreated: true})\n                }\n            });\n    }\n\n    getUserID() {\n        fetch((this.state.endpoints.users + 'me'), {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${this.state.at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else console.error('Error: getUserID');\n            })\n            .then(data => {\n                    if (data) {\n                        this.setState({userID: data.id});\n                    }\n                }\n            );\n    }\n\n    getCircleX(deg, radius) {\n        const radians = deg * (Math.PI / 180);\n        return Math.sin(radians) * radius;\n    }\n\n    getCircleY(deg, radius) {\n        const radians = deg * (Math.PI / 180);\n        return Math.cos(radians) * radius;\n    }\n\n    getColor(i) {\n        const colors = ['rgb(108, 220, 254)', 'rgb(55, 223, 159)', 'rgb(104, 74, 179)', 'rgb(245, 163, 199)', 'rgb(242, 107, 60)', 'rgb(241, 80, 98)', 'rgb(254, 253, 223)', 'rgb(105, 192, 123)',\n            'rgb(183, 124, 168)'];\n        const color = Math.round(i) % (colors.length);\n        return (colors[color]);\n    }\n\n    createConfetti() {\n        const container = document.getElementById('confetti-container');\n        container.innerHTML = '';\n        for (let i = 1; i <= 360; i += 30) {\n            const elem = document.createElement('span');\n            const r = (Math.random() * 7) + 5;\n            const radius = 100;\n            const x = Math.round(this.getCircleY(i, radius)).toString() + 'px';\n            const y = Math.round(this.getCircleX(i, radius)).toString() + 'px';\n            const coord = 'translate(' + x.toString() + ',' + y.toString() + ')';\n            elem.style.webkitTransform = coord;\n            elem.style.width = r.toString() + 'px';\n            elem.style.height = r.toString() + 'px';\n            elem.classList.add('confetti');\n            elem.style.backgroundColor = this.getColor(i / 30);\n            elem.style.webkitTranslate = 'transform 5s linear ease-in-out';\n            container.appendChild(elem);\n        }\n        container.style.visibility = 'visible';\n    }\n\n    render() {\n        return (\n            <div className={this.state.playlist.length > 0 ? 'Playlist home' : 'Playlist center-display'}>\n                {this.state.playlist.length > 0 ? (\n                    <h1 className=\"header playlist-h1\">Here is a list of your 20 most recently added tracks:</h1>) : (\n                    <h1 className=\"header\">See your Spotify Top 20 Recently Added tracks, and make it into a\n                        playlist</h1>)}\n                {this.state.playlist.length > 0 ? (\n                    <div className=\"center-display\">\n                        <div className=\"button-div\">\n                            {this.state.playlistCreated ? (\n                                    <a className=\"button-link\" onMouseEnter={this.createConfetti}\n                                       href={this.state.playlistCreatedLink}\n                                       target=\"_blank\" rel=\"noopener noreferrer\"><span>Go to playlist<span\n                                        id=\"confetti-container\"/></span></a>) :\n                                (<button className=\"button-link\" onClick={this.createPlaylist}>Create this playlist on\n                                    Spotify for me\n                                </button>)\n                            }\n                        </div>\n                        <ul className=\"playlist-container center-display\">\n                            {this.state.playlist.map(\n                                (track, index) => {\n                                    return (\n                                        <li key={index}><Track track={track}/></li>\n                                    )\n                                }\n                            )}\n                        </ul>\n                    </div>) : (\n                    <span>\n                        <div className=\"button-div margin-top\"><a href={this.state.links.authLink}>Click on me to authorize\n                            Spotify</a>\n                        </div>\n                    </span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","import React, {Component} from 'react';\nimport Playlist from '../Playlist/Playlist';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mid: '',\n            ms: ''\n        };\n        this.retrieve = this.retrieve.bind(this);\n    }\n\n    componentDidMount() {\n        this.retrieve();\n    }\n\n    retrieve() {\n        // TODO: implement a reset sessionStorage, in case user wants to change ID\n        if (!this.state.mid && sessionStorage.getItem('mid')) {\n            this.setState({\n                mid: sessionStorage.getItem('mid'),\n                ms: sessionStorage.getItem('ms')\n            });\n        } else {\n            Promise.all([\n                fetch('https://spotify-secret.herokuapp.com/mid', {\n                    'Access-Control-Allow-Headers': {\n                        'mode': 'cors',\n                        'access-control-allow-origin': '*'\n\n                    }\n                }),\n                fetch('https://spotify-secret.herokuapp.com/ms', {\n                    'Access-Control-Allow-Headers': {\n                        'mode': 'cors',\n                        'access-control-allow-origin': '*'\n                    }\n                })\n            ]).then((r) => {\n                return Promise.all(r.map((response) => {\n                    return response.json();\n                }))\n            }).then((m) => {\n                this.setState({mid: m[0], ms: m[1]});\n                return {mid: m[0], ms: m[1]};\n            });\n        }\n    }\n\n    render() {\n        if (!this.state.mid || !this.state.ms) {\n            return (<div className=\"Home\">\n                <span>Loading...</span>\n            </div>);\n        } else {\n            return (\n                <div className=\"Home\">\n                    <Playlist mid={this.state.mid} ms={this.state.ms}/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Home from './Home/Home';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}