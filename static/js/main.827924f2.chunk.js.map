{"version":3,"sources":["Track/Track.js","Playlist/Playlist.js","Home/Home.js","App.js","index.js"],"names":["Track","className","alt","this","props","track","name","artists","src","albumArt","url","href","link","map","artist","index","key","Component","Playlist","state","code","playlist","playlistURI","ruri","userID","at","playlistCreated","endpoints","authorize","token","users","links","authLink","getLibrary","bind","getToken","getUserID","generateAuthLink","addTracksToPlaylist","createPlaylist","getCode","URLSearchParams","window","location","search","get","setState","sessionStorage","setItem","scopes","encodeURIComponent","mid","ac","refreshToken","getItem","grantType","codeType","encodedBody","btoa","ms","fetch","method","headers","body","then","r","ok","json","removeItem","console","error","data","access_token","refresh_token","compileList","tracks","items","forEach","object","item","external_urls","spotify","album","images","tempPlaylist","tempPlaylistURI","push","uri","snapshotID","id","playlistID","JSON","stringify","status","message","snapshot_id","aria-label","length","onClick","Home","submitted","retrieve","handleSubmit","handleUserInput","e","preventDefault","event","target","value","onSubmit","type","onChange","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.827924f2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Track.scss';\n\nclass Track extends Component {\n    render() {\n        return (\n            <span className=\"Track\">\n                <span className=\"track-image-small\">\n                    <img alt={'Album cover of ' + this.props.track.name + ' by ' + this.props.track.artists[0].name}\n                         src={this.props.track.albumArt[1].url}/>\n                </span>\n                <span className=\"track-details\">\n                    <h2 className=\"track-title\">\n                        <a href={this.props.track.link}>{this.props.track.name}</a>\n                    </h2>\n                    <p className=\"track-artist\">\n                        {\n                            this.props.track.artists.map((artist, index) => {\n                                return (<a href={artist.link} key={index}>\n                                    { index > 0 ? (', ') : ('') } {artist.name}\n                                </a>);\n                            })\n                        }\n                    </p>\n                </span>\n            </span>\n        );\n    }\n}\n\nexport default Track;\n","import React, {Component} from 'react';\nimport Track from '../Track/Track';\nimport './Playlist.scss';\n\n// TODO Generate a playlist for user, and add custom playlist cover\nclass Playlist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            code: '',\n            playlist: [],\n            playlistURI: [],\n            ruri: 'https://iguannalin.github.io/spotify-recently-added/',\n            userID: '',\n            at: '',\n            playlistCreated: false,\n            endpoints: {\n                authorize: 'https://accounts.spotify.com/authorize',\n                token: 'https://accounts.spotify.com/api/token',\n                users: 'https://api.spotify.com/v1/'\n            },\n            links: {\n                authLink: ''\n            }\n        };\n        this.getLibrary = this.getLibrary.bind(this);\n        this.getToken = this.getToken.bind(this);\n        this.getUserID = this.getUserID.bind(this);\n        this.generateAuthLink = this.generateAuthLink.bind(this);\n        this.addTracksToPlaylist = this.addTracksToPlaylist.bind(this);\n        this.createPlaylist = this.createPlaylist.bind(this);\n        this.getCode = this.getCode.bind(this);\n    };\n\n    componentDidMount() {\n        this.generateAuthLink();\n        this.getToken(this.getCode());\n    }\n\n    getCode() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const code = urlParams.get('code');\n        this.setState({\n            code: code\n        });\n        sessionStorage.setItem('mcode', code);\n        return code;\n    }\n\n    generateAuthLink() {\n        const scopes = encodeURIComponent('user-library-read playlist-modify-private');\n        this.setState({\n            links: {\n                authLink: (this.state.endpoints.authorize + '?client_id=' + this.props.mid + '&response_type=code&redirect_uri=' + this.state.ruri + '&scope=' + scopes)\n            }\n        });\n    }\n\n    getToken(ac) {\n        const refreshToken = sessionStorage.getItem('mtoken');\n        let grantType = 'authorization_code';\n        let codeType = 'code';\n        if (refreshToken && refreshToken !== \"undefined\") {\n            this.setState({at: refreshToken});\n            ac = refreshToken;\n            grantType = 'refresh_token';\n            codeType = 'refresh_token';\n        }\n\n        const encodedBody = window.btoa(this.props.mid + ':' + this.props.ms);\n        fetch(this.state.endpoints.token, {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': `Basic ${encodedBody}`\n            },\n            body: `grant_type=${grantType}&${codeType}=${ac}&redirect_uri=${this.state.ruri}`,\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else {\n                    sessionStorage.removeItem('mcode');\n                    console.error('Error: getToken');\n                }\n            })\n            .then(data => {\n                if (data && data.access_token) {\n                    this.setState({\n                        at: data.access_token\n                    });\n                    if (data.refresh_token) sessionStorage.setItem('mtoken', data.refresh_token);\n                    this.getLibrary();\n                }\n            });\n\n    }\n\n    getLibrary() {\n        fetch('https://api.spotify.com/v1/me/tracks?limit=20', {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${this.state.at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) return r.json(); else {\n                    console.error('Error: getLibrary');\n                    sessionStorage.removeItem('mtoken');\n                }\n            })\n            .then(data => {\n                if (data) this.compileList(data);\n            })\n            .then(() => {\n                this.getUserID();\n            });\n    }\n\n    compileList(tracks) {\n        this.setState(() => {\n            return {playlist: []}\n        });\n        if (tracks && tracks.items) {\n            tracks.items.forEach(object => {\n                    const item = object.track;\n                    const track = {\n                        name: item.name,\n                        link: item.external_urls.spotify,\n                        artists: item.artists.map(artist => {\n                            return {name: artist.name, link: artist.external_urls.spotify}\n                        }),\n                        albumArt: item.album.images\n                    };\n                    const tempPlaylist = this.state.playlist;\n                    const tempPlaylistURI = this.state.playlistURI;\n                    tempPlaylist.push(track);\n                    tempPlaylistURI.push(item.uri);\n                    this.setState({\n                        playlist: tempPlaylist,\n                        playlistURI: tempPlaylistURI\n                    })\n                }\n            );\n        }\n    }\n\n    createPlaylist() {\n        const snapshotID = sessionStorage.getItem('playlistSnapshot');\n        if (snapshotID) {\n            this.addTracksToPlaylist(snapshotID);\n        } else {\n            fetch(this.state.endpoints.users + 'users/' + this.state.userID + '/playlists', {\n                method: 'POST',\n                'Access-Control-Allow-Headers': {\n                    'mode': 'no-cors',\n                    'access-control-allow-origin': '*'\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.state.at}`\n                },\n                body: `{\"name\":\"Recently Added\",\"public\":false,\"description\":\"Your top 20 recently added Spotify tracks. Happy 2020! - Anna :)\"}`\n            })\n                .then(r => {\n                    if (r.ok) return r.json();\n                    else console.error('Error: createPlaylist');\n                })\n                .then(data => {\n                    if (data) this.addTracksToPlaylist(data.id);\n                });\n        }\n    }\n\n    addTracksToPlaylist(playlistID) {\n        fetch(this.state.endpoints.users + 'playlists/' + playlistID + '/tracks', {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.at}`\n            },\n            body: `{\"uris\":${JSON.stringify(this.state.playlistURI)}}`\n        })\n            .then(r => r.json())\n            .then(data => {\n                if (data.error && data.error.status >= 400 && data.error.message === 'Invalid playlist Id') {\n                    sessionStorage.removeItem('playlistSnapshot');\n                    this.createPlaylist();\n                } else if (data) {\n                    sessionStorage.setItem('playlistSnapshot', data.snapshot_id);\n                    this.setState({playlistCreated: true})\n                }\n            });\n    }\n\n    getUserID() {\n        fetch((this.state.endpoints.users + 'me'), {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${this.state.at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else console.error('Error: getUserID');\n            })\n            .then(data => {\n                    if (data) {\n                        this.setState({userID: data.id});\n                    }\n                }\n            );\n    }\n\n    render() {\n        return (\n            <div className=\"Playlist\">\n                <ul className=\"playlist-container\" aria-label=\"Here is a list of your 20 most recently added tracks:\">\n                    {this.state.playlist.map(\n                        (track, index) => {\n                            return (\n                                <li key={index}><Track track={track}/></li>\n                            )\n                        }\n                    )\n                    }\n                </ul>\n                {this.state.playlist.length > 0 ? (\n                    <div className=\"button-div position-right\">\n                        {this.state.playlistCreated ? (<p className=\"button-link\">Done!</p>) :\n                            (<button className=\"button-link\" onClick={this.createPlaylist}>Create this playlist on\n                                Spotify for me\n                            </button>)\n                        }\n                    </div>) : (\n                    <div className=\"button-div\"><a href={this.state.links.authLink}>Click on me to authorize\n                        Spotify</a>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","import React, {Component} from 'react';\nimport Playlist from '../Playlist/Playlist';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mid: '6dc15fdee3cc4723b9f2a422b7f35305',\n            ms: 'a577356d88d340828944780fc72e6749',\n            code: '',\n            submitted: false\n        };\n\n        this.retrieve = this.retrieve.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUserInput = this.handleUserInput.bind(this);\n    }\n\n    componentDidMount() {\n        this.retrieve();\n    }\n\n    retrieve() {\n        // TODO: implement a reset sessionStorage, in case user wants to change ID\n        if (!this.state.mid && sessionStorage.getItem('mid')) {\n            this.setState({\n                mid: sessionStorage.getItem('mid'),\n                ms: sessionStorage.getItem('ms')\n            });\n        }\n    }\n\n    handleSubmit(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({\n            submitted: true\n        });\n    }\n\n    handleUserInput(event) {\n        if (event.target.name === 'mid') {\n            this.setState({\n                mid: event.target.value\n            });\n            sessionStorage.setItem('mid', event.target.value);\n        } else if (event.target.name === 'ms') {\n            this.setState({\n                ms: event.target.value\n            });\n            sessionStorage.setItem('ms', event.target.value);\n        }\n    }\n\n    render() {\n        if ((this.state.mid && this.state.ms) || (this.state.submitted || this.state.code)) {\n            return (\n                <div className=\"Home\">\n                    <Playlist mid={this.state.mid} ms={this.state.ms} code={this.state.code}/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"login-form\">\n                    <div className=\"login-form card\">\n                        <h2>To use this app, enter your client ID & secret here:</h2>\n                        <form onSubmit={this.handleSubmit}>\n                            <div>\n                                <label>Client ID:\n                                    <input type=\"text\" name=\"mid\" onChange={this.handleUserInput}/></label>\n                            </div>\n                            <div>\n                                <label>Secret:\n                                    <input type=\"text\" name=\"ms\" onChange={this.handleUserInput}/></label>\n                            </div>\n                            <div className=\"login-form buttons\">\n                                <input type=\"submit\" value=\"Submit\"/>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Home from './Home/Home';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}