{"version":3,"sources":["Track/Track.js","Playlist/Playlist.js","Home/Home.js","App.js","index.js"],"names":["Track","className","href","this","props","track","link","name","artists","map","artist","index","key","Component","Playlist","state","playlist","ruri","userID","at","endpoints","authorize","token","users","links","authLink","getLibrary","bind","getUserID","generateAuthLink","getToken","code","scopes","encodeURIComponent","setState","mid","ac","encodedBody","window","btoa","ms","fetch","method","headers","body","then","r","ok","json","console","error","sessionStorage","removeItem","data","access_token","compileList","tracks","items","forEach","object","item","external_urls","spotify","tempPlaylist","tempPlaylistURI","playlistURI","push","uri","snapshotID","getItem","addTracksToPlaylist","id","playlistID","JSON","stringify","setItem","snapshot_id","length","onClick","createPlaylist","Home","submitted","getCode","retrieve","handleSubmit","handleUserInput","URLSearchParams","location","search","get","e","preventDefault","event","target","value","onSubmit","type","onChange","App","ReactDOM","render","document","getElementById"],"mappings":"2UAqBeA,E,iLAjBP,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,eACX,uBAAGC,KAAMC,KAAKC,MAAMC,MAAMC,MAAOH,KAAKC,MAAMC,MAAME,OAEtD,yBAAKN,UAAU,gBAEPE,KAAKC,MAAMC,MAAMG,QAAQC,KAAI,SAACC,EAAQC,GAClC,OAAQ,uBAAGT,KAAMQ,EAAOJ,KAAMM,IAAKD,GAAQD,EAAOH,e,GAV1DM,aCkOLC,G,kBA9NX,WAAYV,GAAQ,IAAD,8BACf,4CAAMA,KACDW,MAAQ,CACTC,SAAU,GACVC,KAAM,uDACNC,OAAQ,GACRC,GAAI,GACJC,UAAW,CACPC,UAAW,yCACXC,MAAO,yCACPC,MAAO,+BAEXC,MAAO,CACHC,SAAU,KAGlB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAlBT,E,iFAsBfxB,KAAK0B,mBACL1B,KAAK2B,SAAS3B,KAAKC,MAAM2B,Q,yCAIzB,IAAMC,EAASC,mBAAmB,6CAClC9B,KAAK+B,SAAS,CACVV,MAAO,CACHC,SAAWtB,KAAKY,MAAMK,UAAUC,UAAY,cAAgBlB,KAAKC,MAAM+B,IAAM,oCAAsChC,KAAKY,MAAME,KAAO,UAAYe,O,+BAKpJI,GAAK,IAAD,OACT,GAAKA,EAAL,CAEA,IAAMC,EAAcC,OAAOC,KAAKpC,KAAKC,MAAM+B,IAAM,IAAMhC,KAAKC,MAAMoC,IAClEC,MAAMtC,KAAKY,MAAMK,UAAUE,MAAO,CAC9BoB,OAAQ,OACR,+BAAgC,CAC5B,KAAQ,UACR,8BAA+B,KAEnCC,QAAS,CACL,eAAgB,oCAChB,cAAgB,SAAhB,OAA0BN,IAE9BO,KAAK,sCAAD,OAAwCR,EAAxC,yBAA2DjC,KAAKY,MAAME,QAEzE4B,MAAK,SAAAC,GACF,GAAIA,EAAEC,GAAI,OAAOD,EAAEE,OAEfC,QAAQC,MAAM,mBACdC,eAAeC,WAAW,YAGjCP,MAAK,SAAAQ,GACEA,GAAQA,EAAKC,eACb,EAAKpB,SAAS,CACVf,GAAIkC,EAAKC,eAEb,EAAK5B,oB,mCAKP,IAAD,OACTe,MAAM,gDAAiD,CACnD,+BAAgC,CAC5B,KAAQ,UACR,8BAA+B,KAEnCE,QAAS,CACL,cAAgB,UAAhB,OAA2BxC,KAAKY,MAAMI,OAGzC0B,MAAK,SAAAC,GACF,GAAIA,EAAEC,GACF,OAAOD,EAAEE,OAETC,QAAQC,MAAM,wBAGrBL,MAAK,SAAAQ,GACEA,GAAM,EAAKE,YAAYF,MAE9BR,MAAK,WACF,EAAKjB,iB,kCAIL4B,GAAS,IAAD,OAChBrD,KAAK+B,UAAS,WACV,MAAO,CAAClB,SAAU,OAElBwC,GAAUA,EAAOC,OACjBD,EAAOC,MAAMC,SAAQ,SAAAC,GACb,IAAMC,EAAOD,EAAOtD,MACdA,EAAQ,CACVE,KAAMqD,EAAKrD,KACXD,KAAMsD,EAAKC,cAAcC,QACzBtD,QAASoD,EAAKpD,QAAQC,KAAI,SAAAC,GACtB,MAAO,CAACH,KAAMG,EAAOH,KAAMD,KAAMI,EAAOmD,cAAcC,aAGxDC,EAAe,EAAKhD,MAAMC,SAC1BgD,EAAkB,EAAKjD,MAAMkD,YACnCF,EAAaG,KAAK7D,GAClB2D,EAAgBE,KAAKN,EAAKO,KAC1B,EAAKjC,SAAS,CACVlB,SAAU+C,EACVE,YAAaD,S,uCAQf,IAAD,OACPI,EAAajB,eAAekB,QAAQ,oBAEtCD,EACAjE,KAAKmE,oBAAoBF,GAEzB3B,MAAMtC,KAAKY,MAAMK,UAAUG,MAAQ,SAAWpB,KAAKY,MAAMG,OAAS,aAAc,CAC5EwB,OAAQ,OACR,+BAAgC,CAC5B,KAAQ,UACR,8BAA+B,KAEnCC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BxC,KAAKY,MAAMI,KAE1CyB,KAAK,0GAEJC,MAAK,SAAAC,GACF,GAAIA,EAAEC,GAAI,OAAOD,EAAEE,OACdC,QAAQC,MAAM,4BAEtBL,MAAK,SAAAQ,GACEA,GAAM,EAAKiB,oBAAoBjB,EAAKkB,S,0CAKpCC,GAEhB/B,MAAMtC,KAAKY,MAAMK,UAAUG,MAAQ,aAAeiD,EAAa,UAAW,CACtE9B,OAAQ,OACR,+BAAgC,CAC5B,KAAQ,UACR,8BAA+B,KAEnCC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BxC,KAAKY,MAAMI,KAE1CyB,KAAK,WAAD,OAAa6B,KAAKC,UAAUvE,KAAKY,MAAMkD,aAAvC,OAEHpB,MAAK,SAAAC,GACF,GAAIA,EAAEC,GAAI,OAAOD,EAAEE,OACdC,QAAQC,MAAM,iCAEtBL,MAAK,SAAAQ,GACEA,GAAMF,eAAewB,QAAQ,mBAAoBtB,EAAKuB,kB,kCAIzD,IAAD,OACRnC,MAAOtC,KAAKY,MAAMK,UAAUG,MAAQ,KAAO,CACvC,+BAAgC,CAC5B,KAAQ,UACR,8BAA+B,KAEnCoB,QAAS,CACL,cAAgB,UAAhB,OAA2BxC,KAAKY,MAAMI,OAGzC0B,MAAK,SAAAC,GACF,GAAIA,EAAEC,GAAI,OAAOD,EAAEE,OACdC,QAAQC,MAAM,uBAEtBL,MAAK,SAAAQ,GACMA,GACA,EAAKnB,SAAS,CAAChB,OAAQmC,EAAKkB,U,+BAQ5C,OACI,yBAAKtE,UAAU,YACVE,KAAKY,MAAMC,SAAS6D,OAAS,EAC1B,yBAAK5E,UAAU,6BACX,4BAAQA,UAAU,cAAc6E,QAAS3E,KAAK4E,gBAA9C,2CAIJ,yBAAK9E,UAAU,cAAa,uBAAGC,KAAMC,KAAKY,MAAMS,MAAMC,UAA1B,qCAGhC,4BACKtB,KAAKY,MAAMC,SAASP,KACjB,SAACJ,EAAOM,GACJ,OACI,wBAAIC,IAAKD,GAAO,kBAAC,EAAD,CAAON,MAAOA,c,GApNvCQ,cC+FRmE,E,YAhGX,WAAY5E,GAAQ,IAAD,8BACf,4CAAMA,KACDW,MAAQ,CACToB,IAAK,GACLK,GAAI,GACJT,KAAM,GACNkD,WAAW,GAGf,EAAKC,QAAU,EAAKA,QAAQvD,KAAb,gBACf,EAAKwD,SAAW,EAAKA,SAASxD,KAAd,gBAChB,EAAKyD,aAAe,EAAKA,aAAazD,KAAlB,gBACpB,EAAK0D,gBAAkB,EAAKA,gBAAgB1D,KAArB,gBAZR,E,iFAgBfxB,KAAK+E,UACL/E,KAAKgF,a,gCAKL,IACMpD,EADY,IAAIuD,gBAAgBhD,OAAOiD,SAASC,QAC/BC,IAAI,QAC3BtF,KAAK+B,SAAS,CACVH,KAAMA,EACNkD,YAAclD,IAElBoB,eAAewB,QAAQ,QAAS5C,K,kCAK3B5B,KAAKY,MAAMoB,KAAOgB,eAAekB,QAAQ,QAC1ClE,KAAK+B,SAAS,CACVC,IAAKgB,eAAekB,QAAQ,OAC5B7B,GAAIW,eAAekB,QAAQ,U,mCAK1BqB,GACLA,GACAA,EAAEC,iBAENxF,KAAK+B,SAAS,CACV+C,WAAW,M,sCAIHW,GACc,QAAtBA,EAAMC,OAAOtF,MACbJ,KAAK+B,SAAS,CACVC,IAAKyD,EAAMC,OAAOC,QAEtB3C,eAAewB,QAAQ,MAAOiB,EAAMC,OAAOC,QACd,OAAtBF,EAAMC,OAAOtF,OACpBJ,KAAK+B,SAAS,CACVM,GAAIoD,EAAMC,OAAOC,QAErB3C,eAAewB,QAAQ,KAAMiB,EAAMC,OAAOC,U,+BAK9C,OAAK3F,KAAKY,MAAMoB,KAAOhC,KAAKY,MAAMyB,IAAQrC,KAAKY,MAAMkE,WAAa9E,KAAKY,MAAMgB,KAErE,yBAAK9B,UAAU,QACX,kBAAC,EAAD,CAAUkC,IAAKhC,KAAKY,MAAMoB,IAAKK,GAAIrC,KAAKY,MAAMyB,GAAIT,KAAM5B,KAAKY,MAAMgB,QAKvE,yBAAK9B,UAAU,cACX,yBAAKA,UAAU,mBACX,oFACA,0BAAM8F,SAAU5F,KAAKiF,cACjB,6BACI,4CACI,2BAAOY,KAAK,OAAOzF,KAAK,MAAM0F,SAAU9F,KAAKkF,oBAErD,6BACI,yCACI,2BAAOW,KAAK,OAAOzF,KAAK,KAAK0F,SAAU9F,KAAKkF,oBAEpD,yBAAKpF,UAAU,sBACX,2BAAO+F,KAAK,SAASF,MAAM,mB,GAvFxCjF,aCSJqF,MARf,WACI,OACI,yBAAKjG,UAAU,OACX,kBAAC,EAAD,QCFZkG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.728d3749.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Track extends Component {\n    render() {\n        return (\n            <div className=\"Track\">\n                <div className=\"track-title\">\n                    <a href={this.props.track.link}>{this.props.track.name}</a>\n                </div>\n                <div className=\"track-artist\">\n                    {\n                        this.props.track.artists.map((artist, index) => {\n                            return (<a href={artist.link} key={index}>{artist.name}</a>);\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Track;\n","import React, {Component} from 'react';\nimport Track from '../Track/Track';\nimport './Playlist.scss';\n\n// TODO Generate a playlist for user, and add custom playlist cover\nclass Playlist extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playlist: [],\n            ruri: 'https://iguannalin.github.io/spotify-recently-added/',\n            userID: '',\n            at: '',\n            endpoints: {\n                authorize: 'https://accounts.spotify.com/authorize',\n                token: 'https://accounts.spotify.com/api/token',\n                users: 'https://api.spotify.com/v1/'\n            },\n            links: {\n                authLink: ''\n            }\n        };\n        this.getLibrary = this.getLibrary.bind(this);\n        this.getUserID = this.getUserID.bind(this);\n        this.generateAuthLink = this.generateAuthLink.bind(this);\n    };\n\n    componentDidMount() {\n        this.generateAuthLink();\n        this.getToken(this.props.code);\n    }\n\n    generateAuthLink() {\n        const scopes = encodeURIComponent('user-library-read playlist-modify-private');\n        this.setState({\n            links: {\n                authLink: (this.state.endpoints.authorize + '?client_id=' + this.props.mid + '&response_type=code&redirect_uri=' + this.state.ruri + '&scope=' + scopes)\n            }\n        });\n    }\n\n    getToken(ac) {\n        if (!ac) return;\n\n        const encodedBody = window.btoa(this.props.mid + ':' + this.props.ms);\n        fetch(this.state.endpoints.token, {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': `Basic ${encodedBody}`\n            },\n            body: `grant_type=authorization_code&code=${ac}&redirect_uri=${this.state.ruri}`,\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else {\n                    console.error('Error: getToken');\n                    sessionStorage.removeItem('mcode');\n                }\n            })\n            .then(data => {\n                if (data && data.access_token) {\n                    this.setState({\n                        at: data.access_token\n                    });\n                    this.getLibrary();\n                }\n            });\n    }\n\n    getLibrary() {\n        fetch('https://api.spotify.com/v1/me/tracks?limit=20', {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${this.state.at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) {\n                    return r.json();\n                } else {\n                    console.error('Error: getLibrary');\n                }\n            })\n            .then(data => {\n                if (data) this.compileList(data);\n            })\n            .then(() => {\n                this.getUserID();\n            });\n    }\n\n    compileList(tracks) {\n        this.setState(() => {\n            return {playlist: []}\n        });\n        if (tracks && tracks.items) {\n            tracks.items.forEach(object => {\n                    const item = object.track;\n                    const track = {\n                        name: item.name,\n                        link: item.external_urls.spotify,\n                        artists: item.artists.map(artist => {\n                            return {name: artist.name, link: artist.external_urls.spotify}\n                        }),\n                    };\n                    const tempPlaylist = this.state.playlist;\n                    const tempPlaylistURI = this.state.playlistURI;\n                    tempPlaylist.push(track);\n                    tempPlaylistURI.push(item.uri);\n                    this.setState({\n                        playlist: tempPlaylist,\n                        playlistURI: tempPlaylistURI\n                    })\n                }\n            );\n        }\n    }\n\n    // TODO look for existing 'Recently Added' playlist or delete previous one, to prevent from recreating one over and over again\n    createPlaylist() {\n        const snapshotID = sessionStorage.getItem('playlistSnapshot');\n\n        if (snapshotID) {\n            this.addTracksToPlaylist(snapshotID);\n        } else {\n            fetch(this.state.endpoints.users + 'users/' + this.state.userID + '/playlists', {\n                method: 'POST',\n                'Access-Control-Allow-Headers': {\n                    'mode': 'no-cors',\n                    'access-control-allow-origin': '*'\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.state.at}`\n                },\n                body: `{\"name\":\"Recently Added\",\"public\":false,\"description\":\"Your top 20 recently added Spotify tracks :)\"}`\n            })\n                .then(r => {\n                    if (r.ok) return r.json();\n                    else console.error('Error: createPlaylist');\n                })\n                .then(data => {\n                    if (data) this.addTracksToPlaylist(data.id);\n                });\n        }\n    }\n\n    addTracksToPlaylist(playlistID) {\n\n        fetch(this.state.endpoints.users + 'playlists/' + playlistID + '/tracks', {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.state.at}`\n            },\n            body: `{\"uris\":${JSON.stringify(this.state.playlistURI)}}`\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else console.error('Error: addTracksToPlaylist');\n            })\n            .then(data => {\n                if (data) sessionStorage.setItem('playlistSnapshot', data.snapshot_id)\n            });\n    }\n\n    getUserID() {\n        fetch((this.state.endpoints.users + 'me'), {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${this.state.at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) return r.json();\n                else console.error('Error: getUserID');\n            })\n            .then(data => {\n                    if (data) {\n                        this.setState({userID: data.id});\n\n                    }\n                }\n            );\n    }\n\n    render() {\n        return (\n            <div className=\"Playlist\">\n                {this.state.playlist.length > 0 ? (\n                    <div className=\"button-div position-right\">\n                        <button className=\"button-link\" onClick={this.createPlaylist}>Create this playlist on Spotify\n                            for me\n                        </button>\n                    </div>) : (\n                    <div className=\"button-div\"><a href={this.state.links.authLink}>Click on me to authorize Spotify</a>\n                    </div>\n                )}\n                <ul>\n                    {this.state.playlist.map(\n                        (track, index) => {\n                            return (\n                                <li key={index}><Track track={track}/></li>\n                            )\n                        }\n                    )\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","import React, {Component} from 'react';\nimport Playlist from '../Playlist/Playlist';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mid: '',\n            ms: '',\n            code: '',\n            submitted: false\n        };\n\n        this.getCode = this.getCode.bind(this);\n        this.retrieve = this.retrieve.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUserInput = this.handleUserInput.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCode();\n        this.retrieve();\n    }\n\n\n    getCode() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const code = urlParams.get('code');\n        this.setState({\n            code: code,\n            submitted: !!(code)\n        });\n        sessionStorage.setItem('mcode', code);\n    }\n\n    retrieve() {\n        // TODO: implement a reset sessionStorage, in case user wants to change ID\n        if (!this.state.mid && sessionStorage.getItem('mid')) {\n            this.setState({\n                mid: sessionStorage.getItem('mid'),\n                ms: sessionStorage.getItem('ms')\n            });\n        }\n    }\n\n    handleSubmit(e) {\n        if (e) {\n            e.preventDefault();\n        }\n        this.setState({\n            submitted: true\n        });\n    }\n\n    handleUserInput(event) {\n        if (event.target.name === 'mid') {\n            this.setState({\n                mid: event.target.value\n            });\n            sessionStorage.setItem('mid', event.target.value);\n        } else if (event.target.name === 'ms') {\n            this.setState({\n                ms: event.target.value\n            });\n            sessionStorage.setItem('ms', event.target.value);\n        }\n    }\n\n    render() {\n        if ((this.state.mid && this.state.ms) || (this.state.submitted || this.state.code)) {\n            return (\n                <div className=\"Home\">\n                    <Playlist mid={this.state.mid} ms={this.state.ms} code={this.state.code}/>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"login-form\">\n                    <div className=\"login-form card\">\n                        <h2>To use this app, enter your client ID & secret here:</h2>\n                        <form onSubmit={this.handleSubmit}>\n                            <div>\n                                <label>Client ID:\n                                    <input type=\"text\" name=\"mid\" onChange={this.handleUserInput}/></label>\n                            </div>\n                            <div>\n                                <label>Secret:\n                                    <input type=\"text\" name=\"ms\" onChange={this.handleUserInput}/></label>\n                            </div>\n                            <div className=\"login-form buttons\">\n                                <input type=\"submit\" value=\"Submit\"/>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Home from './Home/Home';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}