Index: src/Songs/Songs.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from 'react';\nimport Song from '../Song/Song';\n\nclass Songs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playlist: [],\n            ruri: 'https://iguannalin.github.io/spotify-recently-added/',\n            endpoints: {\n                authorize: 'https://accounts.spotify.com/authorize'\n            }\n        }\n    };\n\n    generateAuthLink() {\n        return this.state.endpoints.authorize + '?client_id=' + this.props.mid + '&response_type=code&redirect_uri=' + this.state.ruri + '&scope=user-library-read';\n    }\n\n    componentDidMount() {\n        this.getToken(this.props.code);\n    }\n\n    getToken(ac) {\n        const encodedBody = window.btoa(this.props.mid + ':' + this.props.ms);\n        console.log('CODE', ac);\n\n        fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': `Basic ${encodedBody}`\n            },\n            body: `grant_type=authorization_code&code=${ac}&redirect_uri=${this.state.ruri}`,\n        })\n            .then(r => {\n                if (r.ok) return r.json()\n            })\n            .then(data => {\n                if (data && data.access_token) this.getLibrary(data.access_token)\n            });\n    }\n\n    getLibrary(at) {\n        console.log('TOKEN', at);\n        fetch('https://api.spotify.com/v1/me/tracks?limit=20', {\n            'Access-Control-Allow-Headers': {\n                'mode': 'no-cors',\n                'access-control-allow-origin': '*'\n            },\n            headers: {\n                'Authorization': `Bearer ${at}`\n            }\n        })\n            .then(r => {\n                if (r.ok) {\n                    return r.json();\n                } else {\n                    console.log('Error: getLibrary');\n                    return;\n                }\n            })\n            .then(data => {\n                if (data) this.compileList(data);\n            });\n    }\n\n    compileList(tracks) {\n        this.setState(() => {\n            return {playlist: []}\n        });\n\n        if (tracks && tracks.items) {\n            tracks.items.forEach(object => {\n                    const item = object.track;\n                    const track = {\n                        name: item.name,\n                        link: item.external_urls.spotify,\n                        artists: item.artists.map(artist => {\n                            return {name: artist.name, link: artist.external_urls.spotify}\n                        })\n                    };\n                    const tempPlaylist = this.state.playlist;\n                    tempPlaylist.push(track);\n                    this.setState(() => {\n                        return {\n                            playlist: tempPlaylist\n                        }\n                    })\n                }\n            );\n        }\n    }\n\n    render() {\n        const authLink = this.generateAuthLink();\n        console.log('LINK ', authLink);\n        return (\n            <div className=\"Playlist\">\n                <a href={authLink}>LINK</a>\n                <ul>\n                    {this.state.playlist.map(\n                        track => {\n                            return (\n                                <Song track={track}></Song>\n                            )\n                        }\n                    )\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Songs;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Songs/Songs.js	(revision 31409681c911fad87ddd4785cfa436e31e3589ff)
+++ src/Songs/Songs.js	(date 1577958100000)
@@ -6,7 +6,7 @@
         super(props);
         this.state = {
             playlist: [],
-            ruri: 'https://iguannalin.github.io/spotify-recently-added/',
+            ruri: 'http://localhost:3000/',
             endpoints: {
                 authorize: 'https://accounts.spotify.com/authorize'
             }
